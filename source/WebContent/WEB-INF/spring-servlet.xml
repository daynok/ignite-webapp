<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:p="http://www.springframework.org/schema/p"
                xmlns:context="http://www.springframework.org/schema/context"
                xmlns:mvc="http://www.springframework.org/schema/mvc"
                xmlns:jee="http://www.springframework.org/schema/jee"
                xsi:schemaLocation="
                        http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee.xsd
                        ">
	
	<!-- Here we scan for all web @Controllers to be loaded into the Spring managed context -->
	<context:component-scan base-package="com.foo" />
        
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
    	<mvc:message-converters>
        	<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
        	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    	</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    	<property name="favorPathExtension" value="false" />
     	<property name="favorParameter" value="true" />
     	<property name="mediaTypes" >
        <value>
        	json=application/json
            xml=application/xml
         </value>
     	</property>
	</bean> 
    
	<!-- this bean handles @RequestMapping annotations -->
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="useDefaultSuffixPattern" value="false" />
	</bean>

	<!-- this bean handles @RequestParam annotations attached to method parameters -->
	<bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
	</bean>

	<!-- maps view names to actual templates used for rendering -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- damage control -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error" />
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error</prop>
			</props>
		</property>
	</bean>
</beans>